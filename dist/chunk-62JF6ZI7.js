import { b, c, d } from './chunk-VO7VPLVP.js';
import { useEffectAsync, useMemoAsync } from '@chengsokdara/react-hooks-async';
import { useRef, useState, useEffect } from 'react';

var ne={apiKey:"",autoStart:!1,autoTranscribe:!0,mode:"transcriptions",nonStop:!1,removeSilence:!1,stopTimeout:5e3,streaming:!1,timeSlice:1e3,onDataAvailable:void 0,onTranscribe:void 0,onProcessAudioChunk:void 0},oe={stop:void 0},ae={blob:void 0,text:void 0},pe=_=>{let{apiKey:l,autoStart:A,autoTranscribe:v,mode:y,nonStop:C,removeSilence:L,stopTimeout:M,streaming:h,timeSlice:q,whisperConfig:c$1,onDataAvailable:K,onTranscribe:O,onProcessAudioChunk:U}={...ne,..._};if(!l&&!O)throw new Error("apiKey is required if onTranscribe is not provided");let f=useRef([]),i=useRef(),s=useRef(),r=useRef(),o=useRef(),d$1=useRef(oe),[I,S]=useState(!1),[$,B]=useState(!1),[j,m]=useState(!1),[z,T]=useState(ae);useEffect(()=>()=>{f.current&&(f.current=[]),i.current&&(i.current.flush(),i.current=void 0),r.current&&(r.current.destroy(),r.current=void 0),g("stop"),s.current&&(s.current.off("speaking",k),s.current.off("stopped_speaking",R)),o.current&&(o.current.getTracks().forEach(e=>e.stop()),o.current=void 0);},[]),useEffectAsync(async()=>{A&&await W();},[A]);let N=async()=>{await W();},G=async()=>{await V();},J=async()=>{await E();},W=async()=>{try{if(o.current||await Q(),o.current){if(!r.current){let{default:{RecordRTCPromisesHandler:t,StereoAudioRecorder:a}}=await import('recordrtc'),n={mimeType:"audio/wav",numberOfAudioChannels:1,recorderType:a,sampleRate:44100,timeSlice:h?q:void 0,type:"audio",ondataavailable:v&&h?Z:void 0};r.current=new t(o.current,n);}if(!i.current){let{Mp3Encoder:t}=await import('lamejs');i.current=new t(1,44100,96);}let e=await r.current.getState();(e==="inactive"||e==="stopped")&&await r.current.startRecording(),e==="paused"&&await r.current.resumeRecording(),C&&x("stop"),S(!0);}}catch{}},Q=async()=>{try{if(o.current&&o.current.getTracks().forEach(e=>e.stop()),o.current=await navigator.mediaDevices.getUserMedia({audio:!0}),!s.current){let{default:e}=await import('hark');s.current=e(o.current,{interval:100,play:!1}),s.current.on("speaking",k),s.current.on("stopped_speaking",R);}}catch{}},x=e=>{d$1.current[e]||(d$1.current[e]=setTimeout(E,M));},k=()=>{B(!0),g("stop");},R=()=>{B(!1),C&&x("stop");},V=async()=>{try{r.current&&(await r.current.getState()==="recording"&&await r.current.pauseRecording(),g("stop"),S(!1));}catch{}},E=async()=>{try{if(r.current){let e=await r.current.getState();if((e==="recording"||e==="paused")&&await r.current.stopRecording(),X(),g("stop"),S(!1),v)await Y();else {let t=await r.current.getBlob();T({blob:t});}await r.current.destroy(),f.current=[],i.current&&(i.current.flush(),i.current=void 0),r.current=void 0;}}catch{}},X=()=>{s.current&&(s.current.off("speaking",k),s.current.off("stopped_speaking",R),s.current=void 0),o.current&&(o.current.getTracks().forEach(e=>e.stop()),o.current=void 0);},g=e=>{d$1.current[e]&&(clearTimeout(d$1.current[e]),d$1.current[e]=void 0);},Y=async()=>{try{if(i.current&&r.current&&await r.current.getState()==="stopped"){m(!0);let t=await r.current.getBlob();if(L){let{createFFmpeg:a}=await import('@ffmpeg/ffmpeg'),n=a({mainName:"main",corePath:b,log:!0});n.isLoaded()||await n.load();let u=await t.arrayBuffer();n.FS("writeFile","in.wav",new Uint8Array(u)),await n.run("-i","in.wav","-acodec","libmp3lame","-b:a","96k","-ar","44100","-af",c,"out.mp3");let b$1=n.FS("readFile","out.mp3");if(b$1.length<=225){n.exit(),T({blob:t}),m(!1);return}t=new Blob([b$1.buffer],{type:"audio/mpeg"}),n.exit();}else {let a=await t.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(a));t=new Blob([n],{type:"audio/mpeg"});}m(!1);}}catch{m(!1);}},Z=async e=>{try{if(h&&r.current){if(K?.(e),i.current){let a=await e.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(a)),u=new Blob([n],{type:"audio/mpeg"});f.current.push(u);}if(await r.current.getState()==="recording"){let a=new Blob(f.current,{type:"audio/mpeg"}),n=new File([a],"speech.mp3",{type:"audio/mpeg"});if(typeof U=="function"){let u=await U(n);u&&T(b=>({...b,text:u}));}}}}catch{}};useMemoAsync(async e=>{let t=new FormData;t.append("file",e),t.append("model","whisper-1"),y==="transcriptions"&&t.append("language",c$1?.language??"en"),c$1?.prompt&&t.append("prompt",c$1.prompt),c$1?.response_format&&t.append("response_format",c$1.response_format),c$1?.temperature&&t.append("temperature",`${c$1.temperature}`);let a={};a["Content-Type"]="multipart/form-data",l&&(a.Authorization=`Bearer ${l}`);let{default:n}=await import('axios');return (await n.post(d+y,t,{headers:a})).data.text},[l,y,c$1]);return {recording:I,speaking:$,transcribing:j,transcript:z,pauseRecording:G,startRecording:N,stopRecording:J}};

export { pe as a };
